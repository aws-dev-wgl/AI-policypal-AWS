name: terraform-ci

on:
  pull_request:
    paths:
      - "infra/**.tf"
      - ".github/workflows/terraform-ci.yml"

permissions:
  contents: read

jobs:
  lint_validate:
    name: Terraform fmt & validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.0

      - name: Terraform fmt (check)
        run: terraform fmt -check -recursive

      # init without backend so it doesn't need AWS creds
      - name: Terraform init (no backend)
        run: terraform init -backend=false

      - name: Terraform validate
        run: terraform validate

  plan:
    name: Terraform plan (requires AWS OIDC)
    runs-on: ubuntu-latest
    needs: lint_validate
    if: vars.AWS_ROLE_TO_ASSUME != ''   # run only if you set the role
    env:
      AWS_REGION: us-east-1   # set to your region
    defaults:
      run:
        working-directory: infra
    permissions:
      id-token: write       # OIDC
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.0

      - name: Terraform init (backend enabled)
        run: terraform init

      - name: Terraform plan
        run: terraform plan -no-color -out=tfplan.out

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan.out
          path: infra/tfplan.out
